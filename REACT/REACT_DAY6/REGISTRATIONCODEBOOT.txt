REGISTRATION ENTITY CLASS
=========================================================
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
public class Register {
	@Id
	@Column(length = 15)
private String uname;
	@Column(length = 10)
private String pass;
	@Column(length = 25)
private String nm;
	@Column(length = 25)
private String email;
	@Column(length = 10)
private String phno;
}
====================================================
REGISTRATION REPOSITORY INTERFACE
==================================================
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.arindam.model.Register;
@Repository
public interface RegisterRepositoty extends JpaRepository<Register,String> {
	@Query("from Register where uname=:uname and pass=:pass")
public Register login(String uname,String pass);
}
===========================================================
REGISTRATION SERVICE CLASS
===========================================================
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.arindam.model.Register;
import com.arindam.repository.RegisterRepositoty;

@Service
public class RegisterService {
	@Autowired
private RegisterRepositoty rrepo;
	public void addData(Register register)
	{
		rrepo.save(register);
	}
	public List<Register> getData()
	{
		return rrepo.findAll();
	}
	public Register login(String uname,String pass)
	{
		return rrepo.login(uname, pass);
	}
}
==================================================================
REGISTRATION CONTROLLER CLASS
==================================================================
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.arindam.model.Register;
import com.arindam.service.RegisterService;

@RestController
@RequestMapping("/register")
@CrossOrigin(origins="http://localhost:3000/")
public class RegisterController {
	@Autowired
private RegisterService rservice;
	@PostMapping("/add")
	public ResponseEntity<String> addData(@RequestBody Register register)
	{
		String msg="REGISTRATION HAS BEEN DONE SUCCESSFULLY";
		rservice.addData(register);
		return new ResponseEntity<String>(msg,HttpStatus.CREATED);
	}
	@GetMapping("/fetch")
	public ResponseEntity<List<Register>> getData()
	{
		List<Register> rlist=rservice.getData();
		return new ResponseEntity<List<Register>>(rlist,HttpStatus.OK);
	}
	@GetMapping("/login/{uname}/{pass}")
	public ResponseEntity<String> login(@PathVariable String uname,@PathVariable String pass)
	{
		String msg;
		Register register=rservice.login(uname, pass);
		if(register!=null)
		{
			msg="LOGIN SUCCESSFULL";
		}
		else
		{
			msg="LOGIN DENIED";
		}
		return new ResponseEntity<String>(msg,HttpStatus.OK);
	}
}
=======================================================================================
